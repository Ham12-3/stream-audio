syntax = "proto3";

package voicegateway.tts;

option go_package = "voice-gateway/pkg/proto/tts";

// TTS service for streaming text-to-speech synthesis
service TTSService {
  // StreamSynthesize performs streaming text-to-speech
  rpc StreamSynthesize(stream TextChunk) returns (stream AudioResponse);
}

// TextChunk represents a chunk of text to synthesize
message TextChunk {
  // Session ID for tracking the conversation
  string session_id = 1;

  // Text to synthesize
  string text = 2;

  // Voice ID or name
  string voice_id = 3;

  // Language code (e.g., "en-US")
  string language = 4;

  // Speaking rate (0.5 to 2.0, 1.0 is normal)
  float speed = 5;

  // Pitch adjustment (-20.0 to 20.0, 0.0 is normal)
  float pitch = 6;

  // Whether this is the end of the text stream
  bool is_final = 7;
}

// AudioResponse contains the synthesized audio
message AudioResponse {
  // Session ID
  string session_id = 1;

  // Audio data in PCM or Opus format
  bytes audio_data = 2;

  // Sample rate
  int32 sample_rate = 3;

  // Number of channels
  int32 channels = 4;

  // Audio format (e.g., "pcm", "opus")
  string format = 5;

  // Whether this is the final audio chunk
  bool is_final = 6;

  // Duration of this audio chunk in milliseconds
  int64 duration_ms = 7;
}
